# TODO: Rewritten by updated misc/update-colors.rb.
class ColorsTest < Test::Unit::TestCase
  def test_rgb_001 ; assert_equal(Cairo::Color.parse(:ALICE_BLUE).to_s,                      "#F0F8FFFF") ; end
  def test_rgb_002 ; assert_equal(Cairo::Color.parse(:ALIZARIN_CRIMSON).to_s,                "#E32636FF") ; end
  def test_rgb_003 ; assert_equal(Cairo::Color.parse(:AMARANTH).to_s,                        "#E52B50FF") ; end
  def test_rgb_004 ; assert_equal(Cairo::Color.parse(:AMBER).to_s,                           "#FFBF00FF") ; end
  def test_rgb_005 ; assert_equal(Cairo::Color.parse(:AMETHYST).to_s,                        "#9966CCFF") ; end
  def test_rgb_006 ; assert_equal(Cairo::Color.parse(:ANTIQUE_WHITE).to_s,                   "#FAEBD7FF") ; end
  def test_rgb_007 ; assert_equal(Cairo::Color.parse(:APRICOT).to_s,                         "#FBCEB1FF") ; end
  def test_rgb_008 ; assert_equal(Cairo::Color.parse(:AQUA).to_s,                            "#00FFFFFF") ; end
  def test_rgb_009 ; assert_equal(Cairo::Color.parse(:AQUAMARINE).to_s,                      "#7FFFD4FF") ; end
  def test_rgb_010 ; assert_equal(Cairo::Color.parse(:ASPARAGUS).to_s,                       "#7BA05BFF") ; end
  def test_rgb_011 ; assert_equal(Cairo::Color.parse(:AZURE).to_s,                           "#007FFFFF") ; end
  def test_rgb_012 ; assert_equal(Cairo::Color.parse(:BEIGE).to_s,                           "#F5F5DCFF") ; end
  def test_rgb_013 ; assert_equal(Cairo::Color.parse(:BISQUE).to_s,                          "#FFE4C4FF") ; end
  def test_rgb_014 ; assert_equal(Cairo::Color.parse(:BISTRE).to_s,                          "#3D2B1FFF") ; end
  def test_rgb_015 ; assert_equal(Cairo::Color.parse(:BLACK).to_s,                           "#000000FF") ; end
  def test_rgb_016 ; assert_equal(Cairo::Color.parse(:BLANCHED_ALMOND).to_s,                 "#FFEBCDFF") ; end
  def test_rgb_017 ; assert_equal(Cairo::Color.parse(:BLAZE_ORANGE).to_s,                    "#FF6600FF") ; end
  def test_rgb_018 ; assert_equal(Cairo::Color.parse(:BLUE).to_s,                            "#0000FFFF") ; end
  def test_rgb_019 ; assert_equal(Cairo::Color.parse(:BLUE_VIOLET).to_s,                     "#8A2BE2FF") ; end
  def test_rgb_020 ; assert_equal(Cairo::Color.parse(:BONDI_BLUE).to_s,                      "#0095B6FF") ; end
  def test_rgb_021 ; assert_equal(Cairo::Color.parse(:BRIGHT_GREEN).to_s,                    "#66FF00FF") ; end
  def test_rgb_022 ; assert_equal(Cairo::Color.parse(:BRIGHT_TURQUOISE).to_s,                "#08E8DEFF") ; end
  def test_rgb_023 ; assert_equal(Cairo::Color.parse(:BROWN).to_s,                           "#964B00FF") ; end
  def test_rgb_024 ; assert_equal(Cairo::Color.parse(:BUFF).to_s,                            "#F0DC82FF") ; end
  def test_rgb_025 ; assert_equal(Cairo::Color.parse(:BURGUNDY).to_s,                        "#800020FF") ; end
  def test_rgb_026 ; assert_equal(Cairo::Color.parse(:BURLY_WOOD).to_s,                      "#DEB887FF") ; end
  def test_rgb_027 ; assert_equal(Cairo::Color.parse(:BURNT_ORANGE).to_s,                    "#CC5500FF") ; end
  def test_rgb_028 ; assert_equal(Cairo::Color.parse(:BURNT_SIENNA).to_s,                    "#E97451FF") ; end
  def test_rgb_029 ; assert_equal(Cairo::Color.parse(:BURNT_UMBER).to_s,                     "#8A3324FF") ; end
  def test_rgb_030 ; assert_equal(Cairo::Color.parse(:CADET_BLUE).to_s,                      "#5F9EA0FF") ; end
  def test_rgb_031 ; assert_equal(Cairo::Color.parse(:CAMOUFLAGE_GREEN).to_s,                "#78866BFF") ; end
  def test_rgb_032 ; assert_equal(Cairo::Color.parse(:CARDINAL).to_s,                        "#C41E3AFF") ; end
  def test_rgb_033 ; assert_equal(Cairo::Color.parse(:CARMINE).to_s,                         "#960018FF") ; end
  def test_rgb_034 ; assert_equal(Cairo::Color.parse(:CARNATION).to_s,                       "#F95A61FF") ; end
  def test_rgb_035 ; assert_equal(Cairo::Color.parse(:CARROT_ORANGE).to_s,                   "#ED9121FF") ; end
  def test_rgb_036 ; assert_equal(Cairo::Color.parse(:CELADON).to_s,                         "#ACE1AFFF") ; end
  def test_rgb_037 ; assert_equal(Cairo::Color.parse(:CERISE).to_s,                          "#DE3163FF") ; end
  def test_rgb_038 ; assert_equal(Cairo::Color.parse(:CERULEAN).to_s,                        "#007BA7FF") ; end
  def test_rgb_039 ; assert_equal(Cairo::Color.parse(:CERULEAN_BLUE).to_s,                   "#2A52BEFF") ; end
  def test_rgb_040 ; assert_equal(Cairo::Color.parse(:CHARTREUSE).to_s,                      "#7FFF00FF") ; end
  def test_rgb_041 ; assert_equal(Cairo::Color.parse(:CHARTREUSE_YELLOW).to_s,               "#DFFF00FF") ; end
  def test_rgb_042 ; assert_equal(Cairo::Color.parse(:CHESTNUT).to_s,                        "#CD5C5CFF") ; end
  def test_rgb_043 ; assert_equal(Cairo::Color.parse(:CHOCOLATE).to_s,                       "#D2691EFF") ; end
  def test_rgb_044 ; assert_equal(Cairo::Color.parse(:CINNAMON).to_s,                        "#7B3F00FF") ; end
  def test_rgb_045 ; assert_equal(Cairo::Color.parse(:COBALT).to_s,                          "#0047ABFF") ; end
  def test_rgb_046 ; assert_equal(Cairo::Color.parse(:COPPER).to_s,                          "#B87333FF") ; end
  def test_rgb_047 ; assert_equal(Cairo::Color.parse(:COPPER_ROSE).to_s,                     "#996666FF") ; end
  def test_rgb_048 ; assert_equal(Cairo::Color.parse(:CORAL).to_s,                           "#FF7F50FF") ; end
  def test_rgb_049 ; assert_equal(Cairo::Color.parse(:CORAL_RED).to_s,                       "#FF4040FF") ; end
  def test_rgb_050 ; assert_equal(Cairo::Color.parse(:CORN).to_s,                            "#FBEC5DFF") ; end
  def test_rgb_051 ; assert_equal(Cairo::Color.parse(:CORNFLOWER_BLUE).to_s,                 "#6495EDFF") ; end
  def test_rgb_052 ; assert_equal(Cairo::Color.parse(:CORNSILK).to_s,                        "#FFF8DCFF") ; end
  def test_rgb_053 ; assert_equal(Cairo::Color.parse(:CREAM).to_s,                           "#FFFDD0FF") ; end
  def test_rgb_054 ; assert_equal(Cairo::Color.parse(:CRIMSON).to_s,                         "#DC143CFF") ; end
  def test_rgb_055 ; assert_equal(Cairo::Color.parse(:CYAN).to_s,                            "#00FFFFFF") ; end
  def test_rgb_056 ; assert_equal(Cairo::Color.parse(:DARK_BLUE).to_s,                       "#00008BFF") ; end
  def test_rgb_057 ; assert_equal(Cairo::Color.parse(:DARK_CYAN).to_s,                       "#008B8BFF") ; end
  def test_rgb_058 ; assert_equal(Cairo::Color.parse(:DARK_GOLDENROD).to_s,                  "#B8860BFF") ; end
  def test_rgb_059 ; assert_equal(Cairo::Color.parse(:DARK_GRAY).to_s,                       "#A9A9A9FF") ; end
  def test_rgb_060 ; assert_equal(Cairo::Color.parse(:DARK_GREEN).to_s,                      "#006400FF") ; end
  def test_rgb_061 ; assert_equal(Cairo::Color.parse(:DARK_KHAKI).to_s,                      "#BDB76BFF") ; end
  def test_rgb_062 ; assert_equal(Cairo::Color.parse(:DARK_MAGENTA).to_s,                    "#8B008BFF") ; end
  def test_rgb_063 ; assert_equal(Cairo::Color.parse(:DARK_OLIVE_GREEN).to_s,                "#556B2FFF") ; end
  def test_rgb_064 ; assert_equal(Cairo::Color.parse(:DARK_ORANGE).to_s,                     "#FF8C00FF") ; end
  def test_rgb_065 ; assert_equal(Cairo::Color.parse(:DARK_ORCHID).to_s,                     "#9932CCFF") ; end
  def test_rgb_066 ; assert_equal(Cairo::Color.parse(:DARK_POWDER_BLUE).to_s,                "#003399FF") ; end
  def test_rgb_067 ; assert_equal(Cairo::Color.parse(:DARK_RED).to_s,                        "#8B0000FF") ; end
  def test_rgb_068 ; assert_equal(Cairo::Color.parse(:DARK_SALMON).to_s,                     "#E9967AFF") ; end
  def test_rgb_069 ; assert_equal(Cairo::Color.parse(:DARK_SEA_GREEN).to_s,                  "#8FBC8FFF") ; end
  def test_rgb_070 ; assert_equal(Cairo::Color.parse(:DARK_SLATE_BLUE).to_s,                 "#483D8BFF") ; end
  def test_rgb_071 ; assert_equal(Cairo::Color.parse(:DARK_SLATE_GRAY).to_s,                 "#2F4F4FFF") ; end
  def test_rgb_072 ; assert_equal(Cairo::Color.parse(:DARK_TURQUOISE).to_s,                  "#00CED1FF") ; end
  def test_rgb_073 ; assert_equal(Cairo::Color.parse(:DARK_VIOLET).to_s,                     "#9400D3FF") ; end
  def test_rgb_074 ; assert_equal(Cairo::Color.parse(:DEEP_PINK).to_s,                       "#FF1493FF") ; end
  def test_rgb_075 ; assert_equal(Cairo::Color.parse(:DEEP_SKY_BLUE).to_s,                   "#00BFFFFF") ; end
  def test_rgb_076 ; assert_equal(Cairo::Color.parse(:DENIM).to_s,                           "#1560BDFF") ; end
  def test_rgb_077 ; assert_equal(Cairo::Color.parse(:DIM_GRAY).to_s,                        "#696969FF") ; end
  def test_rgb_078 ; assert_equal(Cairo::Color.parse(:DODGER_BLUE).to_s,                     "#1E90FFFF") ; end
  def test_rgb_079 ; assert_equal(Cairo::Color.parse(:EGGPLANT).to_s,                        "#990066FF") ; end
  def test_rgb_080 ; assert_equal(Cairo::Color.parse(:EMERALD).to_s,                         "#50C878FF") ; end
  def test_rgb_081 ; assert_equal(Cairo::Color.parse(:FALU_RED).to_s,                        "#801818FF") ; end
  def test_rgb_082 ; assert_equal(Cairo::Color.parse(:FERN_GREEN).to_s,                      "#4F7942FF") ; end
  def test_rgb_083 ; assert_equal(Cairo::Color.parse(:FIRE_BRICK).to_s,                      "#B22222FF") ; end
  def test_rgb_084 ; assert_equal(Cairo::Color.parse(:FLAX).to_s,                            "#EEDC82FF") ; end
  def test_rgb_085 ; assert_equal(Cairo::Color.parse(:FLORAL_WHITE).to_s,                    "#FFFAF0FF") ; end
  def test_rgb_086 ; assert_equal(Cairo::Color.parse(:FOREST_GREEN).to_s,                    "#228B22FF") ; end
  def test_rgb_087 ; assert_equal(Cairo::Color.parse(:FRENCH_ROSE).to_s,                     "#F64A8AFF") ; end
  def test_rgb_088 ; assert_equal(Cairo::Color.parse(:FUCHSIA).to_s,                         "#FF00FFFF") ; end
  def test_rgb_089 ; assert_equal(Cairo::Color.parse(:GAINSBORO).to_s,                       "#DCDCDCFF") ; end
  def test_rgb_090 ; assert_equal(Cairo::Color.parse(:GAMBOGE).to_s,                         "#E49B0FFF") ; end
  def test_rgb_091 ; assert_equal(Cairo::Color.parse(:GHOST_WHITE).to_s,                     "#F8F8FFFF") ; end
  def test_rgb_092 ; assert_equal(Cairo::Color.parse(:GOLD).to_s,                            "#FFD700FF") ; end
  def test_rgb_093 ; assert_equal(Cairo::Color.parse(:GOLDENROD).to_s,                       "#DAA520FF") ; end
  def test_rgb_094 ; assert_equal(Cairo::Color.parse(:GRAY).to_s,                            "#808080FF") ; end
  def test_rgb_095 ; assert_equal(Cairo::Color.parse(:GRAY_ASPARAGUS).to_s,                  "#465945FF") ; end
  def test_rgb_096 ; assert_equal(Cairo::Color.parse(:GREEN).to_s,                           "#00FF00FF") ; end
  def test_rgb_097 ; assert_equal(Cairo::Color.parse(:GREEN_YELLOW).to_s,                    "#ADFF2FFF") ; end
  def test_rgb_098 ; assert_equal(Cairo::Color.parse(:HARLEQUIN).to_s,                       "#3FFF00FF") ; end
  def test_rgb_099 ; assert_equal(Cairo::Color.parse(:HELIOTROPE).to_s,                      "#DF73FFFF") ; end
  def test_rgb_100 ; assert_equal(Cairo::Color.parse(:HOLLYWOOD_CERISE).to_s,                "#F400A1FF") ; end
  def test_rgb_101 ; assert_equal(Cairo::Color.parse(:HONEYDEW).to_s,                        "#F0FFF0FF") ; end
  def test_rgb_102 ; assert_equal(Cairo::Color.parse(:HOT_MAGENTA).to_s,                     "#FF00CCFF") ; end
  def test_rgb_103 ; assert_equal(Cairo::Color.parse(:HOT_PINK).to_s,                        "#FF69B4FF") ; end
  def test_rgb_104 ; assert_equal(Cairo::Color.parse(:INDIAN_RED).to_s,                      "#CD5C5CFF") ; end
  def test_rgb_105 ; assert_equal(Cairo::Color.parse(:INDIGO).to_s,                          "#4B0082FF") ; end
  def test_rgb_106 ; assert_equal(Cairo::Color.parse(:INTERNATIONAL_KLEIN_BLUE).to_s,        "#002FA7FF") ; end
  def test_rgb_107 ; assert_equal(Cairo::Color.parse(:INTERNATIONAL_ORANGE).to_s,            "#FF4F00FF") ; end
  def test_rgb_108 ; assert_equal(Cairo::Color.parse(:IVORY).to_s,                           "#FFFFF0FF") ; end
  def test_rgb_109 ; assert_equal(Cairo::Color.parse(:JADE).to_s,                            "#00A86BFF") ; end
  def test_rgb_110 ; assert_equal(Cairo::Color.parse(:KHAKI).to_s,                           "#C3B091FF") ; end
  def test_rgb_111 ; assert_equal(Cairo::Color.parse(:KHAKI_X11).to_s,                       "#F0E68CFF") ; end
  def test_rgb_112 ; assert_equal(Cairo::Color.parse(:LAVENDER).to_s,                        "#B57EDCFF") ; end
  def test_rgb_113 ; assert_equal(Cairo::Color.parse(:LAVENDER_BLUE).to_s,                   "#CCCCFFFF") ; end
  def test_rgb_114 ; assert_equal(Cairo::Color.parse(:LAVENDER_BLUSH).to_s,                  "#FFF0F5FF") ; end
  def test_rgb_115 ; assert_equal(Cairo::Color.parse(:LAVENDER_GRAY).to_s,                   "#BDBBD7FF") ; end
  def test_rgb_116 ; assert_equal(Cairo::Color.parse(:LAVENDER_PINK).to_s,                   "#FBAED2FF") ; end
  def test_rgb_117 ; assert_equal(Cairo::Color.parse(:LAVENDER_ROSE).to_s,                   "#FBA0E3FF") ; end
  def test_rgb_118 ; assert_equal(Cairo::Color.parse(:LAWN_GREEN).to_s,                      "#7CFC00FF") ; end
  def test_rgb_119 ; assert_equal(Cairo::Color.parse(:LEMON).to_s,                           "#FDE910FF") ; end
  def test_rgb_120 ; assert_equal(Cairo::Color.parse(:LEMON_CHIFFON).to_s,                   "#FFFACDFF") ; end
  def test_rgb_121 ; assert_equal(Cairo::Color.parse(:LIGHT_BLUE).to_s,                      "#ADD8E6FF") ; end
  def test_rgb_122 ; assert_equal(Cairo::Color.parse(:LIGHT_CORAL).to_s,                     "#F08080FF") ; end
  def test_rgb_123 ; assert_equal(Cairo::Color.parse(:LIGHT_CYAN).to_s,                      "#E0FFFFFF") ; end
  def test_rgb_124 ; assert_equal(Cairo::Color.parse(:LIGHT_GOLDENROD_YELLOW).to_s,          "#FAFAD2FF") ; end
  def test_rgb_125 ; assert_equal(Cairo::Color.parse(:LIGHT_GREEN).to_s,                     "#90EE90FF") ; end
  def test_rgb_126 ; assert_equal(Cairo::Color.parse(:LIGHT_GREY).to_s,                      "#D3D3D3FF") ; end
  def test_rgb_127 ; assert_equal(Cairo::Color.parse(:LIGHT_PINK).to_s,                      "#FFB6C1FF") ; end
  def test_rgb_128 ; assert_equal(Cairo::Color.parse(:LIGHT_SALMON).to_s,                    "#FFA07AFF") ; end
  def test_rgb_129 ; assert_equal(Cairo::Color.parse(:LIGHT_SEA_GREEN).to_s,                 "#20B2AAFF") ; end
  def test_rgb_130 ; assert_equal(Cairo::Color.parse(:LIGHT_SKY_BLUE).to_s,                  "#87CEFAFF") ; end
  def test_rgb_131 ; assert_equal(Cairo::Color.parse(:LIGHT_SLATE_GRAY).to_s,                "#778899FF") ; end
  def test_rgb_132 ; assert_equal(Cairo::Color.parse(:LIGHT_STEEL_BLUE).to_s,                "#B0C4DEFF") ; end
  def test_rgb_133 ; assert_equal(Cairo::Color.parse(:LIGHT_YELLOW).to_s,                    "#FFFFE0FF") ; end
  def test_rgb_134 ; assert_equal(Cairo::Color.parse(:LILAC).to_s,                           "#C8A2C8FF") ; end
  def test_rgb_135 ; assert_equal(Cairo::Color.parse(:LIME).to_s,                            "#BFFF00FF") ; end
  def test_rgb_136 ; assert_equal(Cairo::Color.parse(:LIME_GREEN).to_s,                      "#32CD32FF") ; end
  def test_rgb_137 ; assert_equal(Cairo::Color.parse(:LINEN).to_s,                           "#FAF0E6FF") ; end
  def test_rgb_138 ; assert_equal(Cairo::Color.parse(:MAGENTA).to_s,                         "#FF00FFFF") ; end
  def test_rgb_139 ; assert_equal(Cairo::Color.parse(:MALACHITE).to_s,                       "#0BDA51FF") ; end
  def test_rgb_140 ; assert_equal(Cairo::Color.parse(:MAROON).to_s,                          "#800000FF") ; end
  def test_rgb_141 ; assert_equal(Cairo::Color.parse(:MAUVE).to_s,                           "#E0B0FFFF") ; end
  def test_rgb_142 ; assert_equal(Cairo::Color.parse(:MEDIUM_AQUAMARINE).to_s,               "#66CDAAFF") ; end
  def test_rgb_143 ; assert_equal(Cairo::Color.parse(:MEDIUM_BLUE).to_s,                     "#0000CDFF") ; end
  def test_rgb_144 ; assert_equal(Cairo::Color.parse(:MEDIUM_CARMINE).to_s,                  "#AF4035FF") ; end
  def test_rgb_145 ; assert_equal(Cairo::Color.parse(:MEDIUM_LAVENDER).to_s,                 "#EE82EEFF") ; end
  def test_rgb_146 ; assert_equal(Cairo::Color.parse(:MEDIUM_ORCHID).to_s,                   "#BA55D3FF") ; end
  def test_rgb_147 ; assert_equal(Cairo::Color.parse(:MEDIUM_PURPLE).to_s,                   "#9370DBFF") ; end
  def test_rgb_148 ; assert_equal(Cairo::Color.parse(:MEDIUM_SEA_GREEN).to_s,                "#3CB371FF") ; end
  def test_rgb_149 ; assert_equal(Cairo::Color.parse(:MEDIUM_SLATE_BLUE).to_s,               "#7B68EEFF") ; end
  def test_rgb_150 ; assert_equal(Cairo::Color.parse(:MEDIUM_SPRING_GREEN).to_s,             "#00FA9AFF") ; end
  def test_rgb_151 ; assert_equal(Cairo::Color.parse(:MEDIUM_TURQUOISE).to_s,                "#48D1CCFF") ; end
  def test_rgb_152 ; assert_equal(Cairo::Color.parse(:MEDIUM_VIOLET_RED).to_s,               "#C71585FF") ; end
  def test_rgb_153 ; assert_equal(Cairo::Color.parse(:MIDNIGHT_BLUE).to_s,                   "#003366FF") ; end
  def test_rgb_154 ; assert_equal(Cairo::Color.parse(:MINT_CREAM).to_s,                      "#F5FFFAFF") ; end
  def test_rgb_155 ; assert_equal(Cairo::Color.parse(:MINT_GREEN).to_s,                      "#98FF98FF") ; end
  def test_rgb_156 ; assert_equal(Cairo::Color.parse(:MISTY_ROSE).to_s,                      "#FFE4E1FF") ; end
  def test_rgb_157 ; assert_equal(Cairo::Color.parse(:MOCCASIN).to_s,                        "#FFE4B5FF") ; end
  def test_rgb_158 ; assert_equal(Cairo::Color.parse(:MOSS_GREEN).to_s,                      "#ADDFADFF") ; end
  def test_rgb_159 ; assert_equal(Cairo::Color.parse(:MOUNTBATTEN_PINK).to_s,                "#997A8DFF") ; end
  def test_rgb_160 ; assert_equal(Cairo::Color.parse(:MUSTARD).to_s,                         "#FFDB58FF") ; end
  def test_rgb_161 ; assert_equal(Cairo::Color.parse(:NAVAJO_WHITE).to_s,                    "#FFDEADFF") ; end
  def test_rgb_162 ; assert_equal(Cairo::Color.parse(:NAVY_BLUE).to_s,                       "#000080FF") ; end
  def test_rgb_163 ; assert_equal(Cairo::Color.parse(:OCHRE).to_s,                           "#CC7722FF") ; end
  def test_rgb_164 ; assert_equal(Cairo::Color.parse(:OLD_GOLD).to_s,                        "#CFB53BFF") ; end
  def test_rgb_165 ; assert_equal(Cairo::Color.parse(:OLD_LACE).to_s,                        "#FDF5E6FF") ; end
  def test_rgb_166 ; assert_equal(Cairo::Color.parse(:OLD_LAVENDER).to_s,                    "#796878FF") ; end
  def test_rgb_167 ; assert_equal(Cairo::Color.parse(:OLD_ROSE).to_s,                        "#C08081FF") ; end
  def test_rgb_168 ; assert_equal(Cairo::Color.parse(:OLIVE).to_s,                           "#808000FF") ; end
  def test_rgb_169 ; assert_equal(Cairo::Color.parse(:OLIVE_DRAB).to_s,                      "#6B8E23FF") ; end
  def test_rgb_170 ; assert_equal(Cairo::Color.parse(:ORANGE).to_s,                          "#FF7500FF") ; end
  def test_rgb_171 ; assert_equal(Cairo::Color.parse(:ORANGE_COLOR_WHEEL).to_s,              "#FF7500FF") ; end
  def test_rgb_172 ; assert_equal(Cairo::Color.parse(:ORANGE_PEEL).to_s,                     "#FFA000FF") ; end
  def test_rgb_173 ; assert_equal(Cairo::Color.parse(:ORANGE_RED).to_s,                      "#FF4500FF") ; end
  def test_rgb_174 ; assert_equal(Cairo::Color.parse(:ORANGE_WEB).to_s,                      "#FFA500FF") ; end
  def test_rgb_175 ; assert_equal(Cairo::Color.parse(:ORCHID).to_s,                          "#DA70D6FF") ; end
  def test_rgb_176 ; assert_equal(Cairo::Color.parse(:PALE_GOLDENROD).to_s,                  "#EEE8AAFF") ; end
  def test_rgb_177 ; assert_equal(Cairo::Color.parse(:PALE_GREEN).to_s,                      "#98FB98FF") ; end
  def test_rgb_178 ; assert_equal(Cairo::Color.parse(:PALE_TURQUOISE).to_s,                  "#AFEEEEFF") ; end
  def test_rgb_179 ; assert_equal(Cairo::Color.parse(:PALE_VIOLET_RED).to_s,                 "#DB7093FF") ; end
  def test_rgb_180 ; assert_equal(Cairo::Color.parse(:PAPAYA_WHIP).to_s,                     "#FFEFD5FF") ; end
  def test_rgb_181 ; assert_equal(Cairo::Color.parse(:PASTEL_GREEN).to_s,                    "#77DD77FF") ; end
  def test_rgb_182 ; assert_equal(Cairo::Color.parse(:PASTEL_PINK).to_s,                     "#FFD1DCFF") ; end
  def test_rgb_183 ; assert_equal(Cairo::Color.parse(:PEACH).to_s,                           "#FFE5B4FF") ; end
  def test_rgb_184 ; assert_equal(Cairo::Color.parse(:PEACH_ORANGE).to_s,                    "#FFCC99FF") ; end
  def test_rgb_185 ; assert_equal(Cairo::Color.parse(:PEACH_PUFF).to_s,                      "#FFDAB9FF") ; end
  def test_rgb_186 ; assert_equal(Cairo::Color.parse(:PEACH_YELLOW).to_s,                    "#FADFADFF") ; end
  def test_rgb_187 ; assert_equal(Cairo::Color.parse(:PEAR).to_s,                            "#D1E231FF") ; end
  def test_rgb_188 ; assert_equal(Cairo::Color.parse(:PERIWINKLE).to_s,                      "#CCCCFFFF") ; end
  def test_rgb_189 ; assert_equal(Cairo::Color.parse(:PERSIAN_BLUE).to_s,                    "#1C39BBFF") ; end
  def test_rgb_190 ; assert_equal(Cairo::Color.parse(:PERSIAN_GREEN).to_s,                   "#00A693FF") ; end
  def test_rgb_191 ; assert_equal(Cairo::Color.parse(:PERSIAN_INDIGO).to_s,                  "#32127AFF") ; end
  def test_rgb_192 ; assert_equal(Cairo::Color.parse(:PERSIAN_PINK).to_s,                    "#F77FBEFF") ; end
  def test_rgb_193 ; assert_equal(Cairo::Color.parse(:PERSIAN_RED).to_s,                     "#CC3333FF") ; end
  def test_rgb_194 ; assert_equal(Cairo::Color.parse(:PERSIAN_ROSE).to_s,                    "#FF1CB1FF") ; end
  def test_rgb_195 ; assert_equal(Cairo::Color.parse(:PERU).to_s,                            "#CD853FFF") ; end
  def test_rgb_196 ; assert_equal(Cairo::Color.parse(:PINE_GREEN).to_s,                      "#01796FFF") ; end
  def test_rgb_197 ; assert_equal(Cairo::Color.parse(:PINK).to_s,                            "#FFC0CBFF") ; end
  def test_rgb_198 ; assert_equal(Cairo::Color.parse(:PINK_ORANGE).to_s,                     "#FF9966FF") ; end
  def test_rgb_199 ; assert_equal(Cairo::Color.parse(:PLUM).to_s,                            "#DDA0DDFF") ; end
  def test_rgb_200 ; assert_equal(Cairo::Color.parse(:POMEGRANATE).to_s,                     "#F34723FF") ; end
  def test_rgb_201 ; assert_equal(Cairo::Color.parse(:POWDER_BLUE).to_s,                     "#B0E0E6FF") ; end
  def test_rgb_202 ; assert_equal(Cairo::Color.parse(:POWDER_BLUE_WEB).to_s,                 "#B0E0E6FF") ; end
  def test_rgb_203 ; assert_equal(Cairo::Color.parse(:PRUSSIAN_BLUE).to_s,                   "#003153FF") ; end
  def test_rgb_204 ; assert_equal(Cairo::Color.parse(:PUCE).to_s,                            "#CC8899FF") ; end
  def test_rgb_205 ; assert_equal(Cairo::Color.parse(:PUMPKIN).to_s,                         "#FF7518FF") ; end
  def test_rgb_206 ; assert_equal(Cairo::Color.parse(:PURPLE).to_s,                          "#660099FF") ; end
  def test_rgb_207 ; assert_equal(Cairo::Color.parse(:RAW_UMBER).to_s,                       "#734A12FF") ; end
  def test_rgb_208 ; assert_equal(Cairo::Color.parse(:RED).to_s,                             "#FF0000FF") ; end
  def test_rgb_209 ; assert_equal(Cairo::Color.parse(:RED_VIOLET).to_s,                      "#C71585FF") ; end
  def test_rgb_210 ; assert_equal(Cairo::Color.parse(:ROBIN_EGG_BLUE).to_s,                  "#00CCCCFF") ; end
  def test_rgb_211 ; assert_equal(Cairo::Color.parse(:ROSE).to_s,                            "#FF007FFF") ; end
  def test_rgb_212 ; assert_equal(Cairo::Color.parse(:ROSY_BROWN).to_s,                      "#BC8F8FFF") ; end
  def test_rgb_213 ; assert_equal(Cairo::Color.parse(:ROYAL_BLUE).to_s,                      "#4169E1FF") ; end
  def test_rgb_214 ; assert_equal(Cairo::Color.parse(:RUSSET).to_s,                          "#80461BFF") ; end
  def test_rgb_215 ; assert_equal(Cairo::Color.parse(:RUST).to_s,                            "#B7410EFF") ; end
  def test_rgb_216 ; assert_equal(Cairo::Color.parse(:SADDLE_BROWN).to_s,                    "#8B4513FF") ; end
  def test_rgb_217 ; assert_equal(Cairo::Color.parse(:SAFETY_ORANGE).to_s,                   "#FF6600FF") ; end
  def test_rgb_218 ; assert_equal(Cairo::Color.parse(:SAFFRON).to_s,                         "#F4C430FF") ; end
  def test_rgb_219 ; assert_equal(Cairo::Color.parse(:SALMON).to_s,                          "#FF8C69FF") ; end
  def test_rgb_220 ; assert_equal(Cairo::Color.parse(:SANDY_BROWN).to_s,                     "#F4A460FF") ; end
  def test_rgb_221 ; assert_equal(Cairo::Color.parse(:SANGRIA).to_s,                         "#92000AFF") ; end
  def test_rgb_222 ; assert_equal(Cairo::Color.parse(:SAPPHIRE).to_s,                        "#082567FF") ; end
  def test_rgb_223 ; assert_equal(Cairo::Color.parse(:SCARLET).to_s,                         "#FF2400FF") ; end
  def test_rgb_224 ; assert_equal(Cairo::Color.parse(:SCHOOL_BUS_YELLOW).to_s,               "#FFD800FF") ; end
  def test_rgb_225 ; assert_equal(Cairo::Color.parse(:SEA_GREEN).to_s,                       "#2E8B57FF") ; end
  def test_rgb_226 ; assert_equal(Cairo::Color.parse(:SEASHELL).to_s,                        "#FFF5EEFF") ; end
  def test_rgb_227 ; assert_equal(Cairo::Color.parse(:SELECTIVE_YELLOW).to_s,                "#FFBA00FF") ; end
  def test_rgb_228 ; assert_equal(Cairo::Color.parse(:SEPIA).to_s,                           "#704214FF") ; end
  def test_rgb_229 ; assert_equal(Cairo::Color.parse(:SHOCKING_PINK).to_s,                   "#FC0FC0FF") ; end
  def test_rgb_230 ; assert_equal(Cairo::Color.parse(:SIENNA).to_s,                          "#A0522DFF") ; end
  def test_rgb_231 ; assert_equal(Cairo::Color.parse(:SILVER).to_s,                          "#C0C0C0FF") ; end
  def test_rgb_232 ; assert_equal(Cairo::Color.parse(:SKY_BLUE).to_s,                        "#87CEEBFF") ; end
  def test_rgb_233 ; assert_equal(Cairo::Color.parse(:SLATE_BLUE).to_s,                      "#6A5ACDFF") ; end
  def test_rgb_234 ; assert_equal(Cairo::Color.parse(:SLATE_GRAY).to_s,                      "#708090FF") ; end
  def test_rgb_235 ; assert_equal(Cairo::Color.parse(:SMALT).to_s,                           "#003399FF") ; end
  def test_rgb_236 ; assert_equal(Cairo::Color.parse(:SNOW).to_s,                            "#FFFAFAFF") ; end
  def test_rgb_237 ; assert_equal(Cairo::Color.parse(:SPRING_GREEN).to_s,                    "#00FF7FFF") ; end
  def test_rgb_238 ; assert_equal(Cairo::Color.parse(:STEEL_BLUE).to_s,                      "#4682B4FF") ; end
  def test_rgb_239 ; assert_equal(Cairo::Color.parse(:SWAMP_GREEN).to_s,                     "#ACB78EFF") ; end
  def test_rgb_240 ; assert_equal(Cairo::Color.parse(:TAN).to_s,                             "#D2B48CFF") ; end
  def test_rgb_241 ; assert_equal(Cairo::Color.parse(:TANGERINE).to_s,                       "#FFCC00FF") ; end
  def test_rgb_242 ; assert_equal(Cairo::Color.parse(:TAUPE).to_s,                           "#483C32FF") ; end
  def test_rgb_243 ; assert_equal(Cairo::Color.parse(:TAWNY).to_s,                           "#CD5700FF") ; end
  def test_rgb_244 ; assert_equal(Cairo::Color.parse(:TEA_GREEN).to_s,                       "#D0F0C0FF") ; end
  def test_rgb_245 ; assert_equal(Cairo::Color.parse(:TEAL).to_s,                            "#008080FF") ; end
  def test_rgb_246 ; assert_equal(Cairo::Color.parse(:TENNE).to_s,                           "#CD5700FF") ; end
  def test_rgb_247 ; assert_equal(Cairo::Color.parse(:TERRA_COTTA).to_s,                     "#E2725BFF") ; end
  def test_rgb_248 ; assert_equal(Cairo::Color.parse(:THISTLE).to_s,                         "#D8BFD8FF") ; end
  def test_rgb_249 ; assert_equal(Cairo::Color.parse(:TOMATO).to_s,                          "#FF6347FF") ; end
  def test_rgb_250 ; assert_equal(Cairo::Color.parse(:TURQUOISE).to_s,                       "#30D5C8FF") ; end
  def test_rgb_251 ; assert_equal(Cairo::Color.parse(:ULTRAMARINE).to_s,                     "#120A8FFF") ; end
  def test_rgb_252 ; assert_equal(Cairo::Color.parse(:VERMILION).to_s,                       "#FF4D00FF") ; end
  def test_rgb_253 ; assert_equal(Cairo::Color.parse(:VIOLET).to_s,                          "#8B00FFFF") ; end
  def test_rgb_254 ; assert_equal(Cairo::Color.parse(:VIOLET_EGGPLANT).to_s,                 "#991199FF") ; end
  def test_rgb_255 ; assert_equal(Cairo::Color.parse(:VIRIDIAN).to_s,                        "#40826DFF") ; end
  def test_rgb_256 ; assert_equal(Cairo::Color.parse(:WHEAT).to_s,                           "#F5DEB3FF") ; end
  def test_rgb_257 ; assert_equal(Cairo::Color.parse(:WHITE).to_s,                           "#FFFFFFFF") ; end
  def test_rgb_258 ; assert_equal(Cairo::Color.parse(:WHITE_SMOKE).to_s,                     "#F5F5F5FF") ; end
  def test_rgb_259 ; assert_equal(Cairo::Color.parse(:WISTERIA).to_s,                        "#C9A0DCFF") ; end
  def test_rgb_260 ; assert_equal(Cairo::Color.parse(:YELLOW).to_s,                          "#FFFF00FF") ; end
  def test_rgb_261 ; assert_equal(Cairo::Color.parse(:YELLOW_GREEN).to_s,                    "#9ACD32FF") ; end
  def test_rgb_262 ; assert_equal(Cairo::Color.parse(:ZINNWALDITE).to_s,                     "#EBC2AFFF") ; end
end
